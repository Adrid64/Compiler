
#SOURCE	"input.txt"

' Programa principal

#line 125
call inicio
halt
#TYPE pairTuple : {
integer:int
character:byte
}
#TYPE ageTuple : {
age:int
}
#TYPE acmeTuple : {
employees:2*ageTuple
}
#GLOBAL pair : pairTuple
#GLOBAL acme : 2*acmeTuple
#GLOBAL fibonacci : 8*3*int
#FUNC p
#RET VOID
p:
ret 0, 0, 0
#FUNC f
#PARAM r : float
#PARAM e : int
#RET int
#LOCAL real : float
#LOCAL c : byte
#LOCAL result : int
f:
ENTER 7

#line 36
pusha bp
pushi 4
subi
pusha bp
pushi 6
addi
loadf
pushf 10.0
mulf
storef

#line 37
pusha bp
pushi 5
subi
pushb 48
storeb

#line 42
pusha bp
pushi 4
addi
loadi
pushi 256
lti
jz else_0

#line 39
pusha bp
pushi 5
subi
pusha bp
pushi 4
addi
loadi
i2b
storeb

#line 40
pusha bp
pushi 7
subi
pusha bp
pushi 5
subi
loadb
b2i
storei
jmp end_if_0
else_0:

#line 42
pusha bp
pushi 7
subi
pusha bp
pushi 4
subi
loadf
f2i
storei
end_if_0:

#line 44
pusha bp
pushi 7
subi
loadi
ret 2, 7, 6
#FUNC initialize
#RET VOID
#LOCAL i : int
initialize:
ENTER 2

#line 60

#line 52
pusha 11
pushi 0
pushi 6
muli
addi
pushi 0
pushi 2
muli
addi
pushi 0
storei

#line 53
pusha 11
pushi 0
pushi 6
muli
addi
pushi 1
pushi 2
muli
addi
pushi 1
storei

#line 54
pusha 11
pushi 0
pushi 6
muli
addi
pushi 2
pushi 2
muli
addi
pushi 1
storei

#line 55
pusha bp
pushi 2
subi
pushi 1
storei
loop_1:
pusha bp
pushi 2
subi
loadi
pushi 8
gei
jnz end_loop_2

#line 57
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 0
pushi 2
muli
addi
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 1
subi
pushi 6
muli
addi
pushi 1
pushi 2
muli
addi
loadi
storei

#line 58
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 1
pushi 2
muli
addi
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 1
subi
pushi 6
muli
addi
pushi 2
pushi 2
muli
addi
loadi
storei

#line 59
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 2
pushi 2
muli
addi
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 0
pushi 2
muli
addi
loadi
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 1
pushi 2
muli
addi
loadi
addi
storei

#line 60
pusha bp
pushi 2
subi
pusha bp
pushi 2
subi
loadi
pushi 1
addi
storei
jmp loop_1
end_loop_2:
ret 0, 2, 0
#FUNC inicio
#RET VOID
#LOCAL i : int
#LOCAL j : int
inicio:
ENTER 4

#line 71
call p

#line 72
pusha bp
pushi 2
subi
pushi 0
storei

#line 73
pusha 0
pushi 2
addi
pushb 48
storeb

#line 74
pusha 0
pushi 0
addi
pushb 48
b2i
storei

#line 77
pusha bp
pushi 2
subi
loadi
i2f
pusha 0
pushi 2
addi
loadb
b2i
call f
outi
pushb 10
outb

#line 78
pushf 1.3
pushi 2
call f
pop

#line 80
call initialize

#line 91

#line 82
pusha bp
pushi 2
subi
pushi 0
storei
loop_3:
pusha bp
pushi 2
subi
loadi
pushi 8
gei
jnz end_loop_4

#line 85
pushb 40
outb
pusha bp
pushi 2
subi
loadi
pushi 1
addi
outi
pushb 41
outb
pushb 32
outb

#line 86
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 0
pushi 2
muli
addi
loadi
outi

#line 87
pushb 43
outb

#line 88
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 1
pushi 2
muli
addi
loadi
outi

#line 89
pushb 61
outb

#line 90
pusha 11
pusha bp
pushi 2
subi
loadi
pushi 6
muli
addi
pushi 2
pushi 2
muli
addi
loadi
outi
pushb 10
outb

#line 91
pusha bp
pushi 2
subi
pusha bp
pushi 2
subi
loadi
pushi 1
addi
storei
jmp loop_3
end_loop_4:

#line 94
pusha 3
pushi 1
pushi 4
muli
addi
pushi 0
addi
pushi 1
pushi 2
muli
addi
pushi 0
addi
pushi 56
storei

#line 96
pusha 3
pushi 1
pushi 4
muli
addi
pushi 0
addi
pushi 1
pushi 2
muli
addi
pushi 0
addi
loadi
outi
pushb 10
outb

#line 106

#line 98
pusha bp
pushi 2
subi
pushi 0
storei
loop_5:
pusha bp
pushi 2
subi
loadi
pushi 2
gei
jnz end_loop_6

#line 104

#line 101
pusha bp
pushi 4
subi
pushi 0
storei
loop_7:
pusha bp
pushi 4
subi
loadi
pushi 2
gei
jnz end_loop_8

#line 103
pusha 3
pusha bp
pushi 2
subi
loadi
pushi 4
muli
addi
pushi 0
addi
pusha bp
pushi 4
subi
loadi
pushi 2
muli
addi
pushi 0
addi
pusha bp
pushi 2
subi
loadi
pusha bp
pushi 4
subi
loadi
addi
storei

#line 104
pusha bp
pushi 4
subi
pusha bp
pushi 4
subi
loadi
pushi 1
addi
storei
jmp loop_7
end_loop_8:

#line 106
pusha bp
pushi 2
subi
pusha bp
pushi 2
subi
loadi
pushi 1
addi
storei
jmp loop_5
end_loop_6:

#line 120

#line 110
pusha bp
pushi 2
subi
pushi 0
storei
loop_9:
pusha bp
pushi 2
subi
loadi
pushi 2
gei
jnz end_loop_10

#line 118

#line 113
pusha bp
pushi 4
subi
pushi 0
storei
loop_11:
pusha bp
pushi 4
subi
loadi
pushi 2
gei
jnz end_loop_12

#line 116
pusha 3
pusha bp
pushi 2
subi
loadi
pushi 4
muli
addi
pushi 0
addi
pusha bp
pushi 4
subi
loadi
pushi 2
muli
addi
pushi 0
addi
loadi
outi

#line 117
pushb 32
outb

#line 118
pusha bp
pushi 4
subi
pusha bp
pushi 4
subi
loadi
pushi 1
addi
storei
jmp loop_11
end_loop_12:

#line 120
pusha bp
pushi 2
subi
pusha bp
pushi 2
subi
loadi
pushi 1
addi
storei
jmp loop_9
end_loop_10:
ret 0, 4, 0
